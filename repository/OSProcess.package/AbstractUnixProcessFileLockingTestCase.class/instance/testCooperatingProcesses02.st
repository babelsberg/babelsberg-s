testing
testCooperatingProcesses02
	"Two cooperating Squeak processes using file region locking to coordinate their
	writes to a shared file."

	"(self selector: #testCooperatingProcesses02) run"

	| result |
	result := self
		doRemote:
			[(self tryUntil: [(accessor lockFile: fileStream from: 100 to: 120) notNil]) ifNil: [self quitImage].
			fileStream position: 100.
			fileStream nextPutAll: 'THIS 11111111111111111111111'.
			accessor unlockFile: fileStream from: 100 to: 120.
			delay wait; wait; wait.
			self tryUntil: [(accessor lockFile: fileStream from: 108 to: 120) notNil].
			fileStream position: 108.
			fileStream nextPutAll: 'A 3333333333333333333333333'.
			accessor unlockFile: fileStream from: 108 to: 120.
			self quitImage]
		doLocal:
			[self assert: (self tryUntil: [(accessor lockFile: fileStream from: 104 to: 120) notNil]).
			fileStream position: 105.
			fileStream nextPutAll: 'IS 2222222222222222222222222'.
			accessor unlockFile: fileStream from: 104 to: 120.
			delay wait; wait; wait.
			self tryUntil: [(accessor lockFile: fileStream from: 108 to: 120) notNil].
			fileStream position: 110.
			fileStream nextPutAll: 'TEST 4444444444444444444444'.
			accessor unlockFile: fileStream from: 108 to: 120].
	self tryUntil: [(accessor lockFile: fileStream from: 100 to: 140) notNil].
	fileStream position: 100.
	result := fileStream next: 17.
	accessor unlockFile: fileStream from: 100 to: 140.
	self assert: result = 'THIS IS A TEST 44'
